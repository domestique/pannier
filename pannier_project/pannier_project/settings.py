"""
Django settings for pannier_project project.

Generated by 'django-admin startproject' using Django 1.9.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from configparser import ConfigParser

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
parser = ConfigParser()
parser.read('/etc/pannier/pannier.ini')
if not parser.has_section('pannier'):
    parser.add_section('pannier')
    parser.set('pannier', 'default_from_email', 'demotimesystem@gmail.com')
    parser.set('pannier', 'email_backend', 'django.core.mail.backends.console.EmailBackend')
    parser.set('pannier', 'static_root', '/usr/local/pannier/static')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '*jwml^^wl&q(lva8&xh=)0@srt7@pkxcdago#(hy^(3w2il)#a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pannier',
]

try:
    import django_nose
except ImportError:
    pass
else:
    INSTALLED_APPS += ('django_nose', )

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pannier_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pannier_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'pannier',
        'USER': 'postgres',
        'PASSWORD': 'pannier_docker',
        'HOST': 'pannier_db',
        'PORT': 5432,
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Chicago'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

# MEDIA SETTINGS
STATIC_URL = '/static/'
STATIC_ROOT = parser.get('pannier', 'static_root')

# TEST SETTINGS
TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'
NOSE_ARGS = [
    '--logging-filter=-django.db.backends.schema',
    '--with-id',
]

# EMAIL SETTINGS
DEFAULT_FROM_EMAIL = parser.get('pannier', 'default_from_email')
EMAIL_BACKEND = parser.get('pannier', 'email_backend')
if parser.has_section('email'):
    EMAIL_HOST = parser.get('email', 'email_host')
    EMAIL_HOST_USER = parser.get('email', 'email_host_user')
    EMAIL_HOST_PASSWORD = parser.get('email', 'email_host_password')
    EMAIL_PORT = parser.get('email', 'email_port')
    EMAIL_USE_TLS = parser.get('email', 'email_use_tls').lower() == 'true'
